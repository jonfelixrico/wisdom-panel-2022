name: Release pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  run-tests:
    uses: ./.github/workflows/run-tests.reusable.yml
  build-and-publish:
    needs: [run-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ steps.package-version.outputs.current-version }}
      - name: Show semver string
        shell: bash
        run: |
          echo "Detected semver ${{ steps.semver_parser.outputs.fullversion }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            latest
            ${{ steps.semver_parser.outputs.major }}
            ${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: BUILD_SCRIPT_NAME=build:debug

  create-release:
    if: github.event_name == 'push'
    needs: [run-tests, build-and-publish]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.package-version.outputs.current-version }}
          release_name: Release ${{ steps.package-version.outputs.current-version }}
